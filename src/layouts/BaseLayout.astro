---
import Footer from "../components/Footer.astro";
import StickyCTA from "../components/StickyCTA.astro";

const { 
  title = "LC Container", 
  description = "Texas' trusted container supplier since 2003.", 
  canonical 
} = Astro.props;
const site = "https://lccontainer.com";
const url = canonical ?? site + Astro.url.pathname;
const ogImage = "/photos/lccontainer-dark.png"; // replace with a richer OG later
---
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{title}</title>
    <meta name="description" content={description} />
    <link rel="canonical" href={url} />

    <!-- Open Graph -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content={url} />
    <meta property="og:image" content={ogImage} />
    <meta property="og:site_name" content="LC Container" />

    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={ogImage} />

    <!-- Perf nits -->
    <link rel="preconnect" href="https://lccontainer.com" crossorigin>
    <meta http-equiv="x-dns-prefetch-control" content="on">
    
    <!-- Optional GA4 datalayer bootstrap -->
    <script>window.dataLayer = window.dataLayer || [];</script>
  </head>
            <body class="bg-brand-black text-ink font-sans antialiased pb-16 md:pb-0">
            <a href="#main-content" class="sr-only focus:not-sr-only absolute top-4 left-4 z-50 px-4 py-2 rounded bg-brand-red text-white">Skip to content</a>
            <style> :root{ color-scheme:dark light } </style>
            <link rel="stylesheet" href="/styles/tokens.css" />
            <main id="main-content">
              <slot />
            </main>
            <StickyCTA />
            <Footer />
          </body>

          <script>
            // Intersection Observer for fade-in animations
            const observerOptions = {
              threshold: 0.1,
              rootMargin: '0px 0px -50px 0px'
            };

            const observer = new IntersectionObserver((entries) => {
              entries.forEach(entry => {
                if (entry.isIntersecting) {
                  entry.target.classList.add('visible');
                }
              });
            }, observerOptions);

            // Observe all fade-in elements
            document.addEventListener('DOMContentLoaded', () => {
              const fadeElements = document.querySelectorAll('.fade-in');
              fadeElements.forEach(el => observer.observe(el));
            });
          </script>
</html>
