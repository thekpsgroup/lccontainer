---
export interface Props {
  title: string;
  description: string;
  ogImage?: string;
}

const { title, description, ogImage = "/photos/logos/lccontainer-logo-transparent-400.png" } = Astro.props;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content={description} />
    <link rel="canonical" href={canonicalURL} />
    
    <!-- Open Graph -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={new URL(ogImage, Astro.site)} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:type" content="website" />
    
    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={new URL(ogImage, Astro.site)} />
    
    <!-- Preload critical resources -->
    <link rel="preload" href="/styles/tokens.css" as="style" onload="this.onload=null;this.rel='stylesheet'">
    <noscript><link rel="stylesheet" href="/styles/tokens.css"></noscript>
    
    <!-- DNS prefetch -->
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.googleapis.com" crossorigin>
    
    <!-- Font optimization -->
    <link rel="preload" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" as="style" onload="this.onload=null;this.rel='stylesheet'">
    <noscript><link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap"></noscript>
    
    <!-- Critical CSS inline -->
    <style>
      body{background:#0B0B0B;color:#FFFFFF;font-family:system-ui,-apple-system,sans-serif;margin:0;padding:0}
      .glass{background:rgba(255,255,255,0.05);backdrop-filter:blur(10px);border:1px solid rgba(255,255,255,0.1);border-radius:12px}
      .bg-brand-red{background-color:#B22222}
      .text-brand-red{color:#B22222}
      .text-ink{color:#FFFFFF}
      .text-ink-muted{color:rgba(255,255,255,0.7)}
      .sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border:0}
      .fade-in{opacity:0;transform:translateY(10px);transition:opacity 0.4s ease,transform 0.4s ease}
      .fade-in.visible{opacity:1;transform:translateY(0)}
      @media (prefers-reduced-motion: reduce){.fade-in{transition:none}}
    </style>
    
    <title>{title}</title>
  </head>
  <body class="bg-brand-black text-ink pb-16 md:pb-0">
    <a href="#main" class="sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 bg-brand-red text-white px-4 py-2 rounded">Skip to content</a>
    
    <slot name="header" />
    
    <main id="main">
      <slot />
    </main>
    
    <slot name="footer" />
    
    <!-- Minimal JavaScript for essential functionality -->
    <script>
      // Simple fade-in animation
      document.addEventListener('DOMContentLoaded', function() {
        const observer = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              entry.target.classList.add('visible');
            }
          });
        }, { threshold: 0.1 });
        
        document.querySelectorAll('.fade-in').forEach(el => observer.observe(el));
      });
      
      // Service worker registration
      if ('serviceWorker' in navigator) {
        window.addEventListener('load', () => {
          navigator.serviceWorker.register('/sw.js').catch(() => {});
        });
      }
    </script>
  </body>
</html>
