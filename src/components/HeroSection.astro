---
import OptimizedImage from './OptimizedImage.astro';
import { heroImages } from '../data/images';

export interface Props {
  title: string;
  subtitle: string;
  backgroundImage?: string;
  stats?: Array<{
    value: string;
    label: string;
  }>;
  ctaButtons?: Array<{
    text: string;
    href: string;
    variant?: 'primary' | 'secondary';
  }>;
}

const {
  title,
  subtitle,
  backgroundImage = heroImages[0].src,
  stats = [
    { value: '20+', label: 'Years Experience' },
    { value: '10,000+', label: 'Containers Delivered' },
    { value: '4.8â˜…', label: 'Customer Rating' }
  ],
  ctaButtons = [
    { text: 'Get Custom Quote', href: '/contact', variant: 'primary' }
  ]
} = Astro.props;
---

<section class="relative min-h-screen flex items-center justify-center overflow-hidden">
  <!-- Background Image with Overlay -->
  <div class="absolute inset-0 z-0">
    <OptimizedImage
      src={backgroundImage}
      alt="Custom container modification background"
      class="w-full h-full object-cover"
      loading="eager"
    />
    <div class="absolute inset-0 bg-gradient-to-br from-primary-600/80 via-primary-700/70 to-primary-800/80"></div>
  </div>
  
  <!-- Animated Background Elements -->
  <div class="absolute inset-0 z-0">
    <div class="absolute top-20 left-20 w-32 h-32 bg-white/10 rounded-full animate-pulse"></div>
    <div class="absolute bottom-32 right-32 w-24 h-24 bg-white/5 rounded-full animate-ping"></div>
    <div class="absolute top-1/2 left-1/4 w-16 h-16 bg-white/8 rounded-full animate-bounce"></div>
  </div>
  
  <!-- Main Content -->
  <div class="relative z-10 container mx-auto px-4 text-center text-white">
    <div class="max-w-5xl mx-auto">
      <!-- Main Headline -->
      <h1 class="text-5xl md:text-7xl lg:text-8xl font-bold mb-8 leading-tight animate-fade-in">
        {title}
      </h1>
      
      <!-- Subtitle -->
      <p class="text-xl md:text-2xl lg:text-3xl mb-12 max-w-4xl mx-auto leading-relaxed animate-slide-up">
        {subtitle}
      </p>
      
      <!-- Stats -->
      <div class="flex flex-wrap justify-center gap-8 mb-12 animate-fade-in-delay">
        {stats.map((stat) => (
          <div class="bg-white/10 backdrop-blur-sm rounded-2xl px-8 py-4 border border-white/20">
            <div class="text-3xl md:text-4xl font-bold mb-2">{stat.value}</div>
            <div class="text-lg opacity-90">{stat.label}</div>
          </div>
        ))}
      </div>
      
      <!-- CTA Buttons -->
      <div class="flex flex-col sm:flex-row gap-6 justify-center animate-slide-up-delay">
        {ctaButtons.map((button) => (
          <a
            href={button.href}
            class={`
              px-8 py-4 rounded-2xl font-semibold text-lg transition-all duration-300 transform hover:scale-105
              ${button.variant === 'primary' 
                ? 'bg-white text-primary-600 hover:bg-gray-100 shadow-2xl hover:shadow-3xl' 
                : 'border-2 border-white text-white hover:bg-white hover:text-primary-600'
              }
            `}
          >
            {button.text}
          </a>
        ))}
      </div>
    </div>
  </div>
  
  <!-- Scroll Indicator -->
  <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2 z-10 animate-bounce">
    <div class="w-6 h-10 border-2 border-white/50 rounded-full flex justify-center">
      <div class="w-1 h-3 bg-white/70 rounded-full mt-2 animate-pulse"></div>
    </div>
  </div>
</section>

<style>
  @keyframes fade-in {
    from { opacity: 0; transform: translateY(30px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  @keyframes slide-up {
    from { opacity: 0; transform: translateY(50px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  .animate-fade-in {
    animation: fade-in 1s ease-out;
  }
  
  .animate-slide-up {
    animation: slide-up 1s ease-out 0.3s both;
  }
  
  .animate-fade-in-delay {
    animation: fade-in 1s ease-out 0.6s both;
  }
  
  .animate-slide-up-delay {
    animation: slide-up 1s ease-out 0.9s both;
  }
  
  .shadow-3xl {
    box-shadow: 0 35px 60px -12px rgba(0, 0, 0, 0.25);
  }
</style>
