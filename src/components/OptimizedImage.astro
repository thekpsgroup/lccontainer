---
export interface Props {
  src: string;
  alt: string;
  width?: number;
  height?: number;
  class?: string;
  loading?: 'lazy' | 'eager';
  priority?: boolean;
  sizes?: string;
  placeholder?: 'blur' | 'dominant-color' | 'none';
}

const {
  src,
  alt,
  width = 800,
  height = 600,
  class: className = '',
  loading = 'lazy',
  priority = false,
  sizes = '100vw',
  placeholder = 'none'
} = Astro.props;

// Simple image URL with base path handling
const imageUrl = src.startsWith('http') ? src : (src.startsWith('/') ? src : `/${src}`);

// Lazy loading optimization
const loadingAttr = priority ? 'eager' : loading;
const fetchPriority = priority ? 'high' : 'auto';

// CSS for aspect ratio
const aspectRatio = height / width * 100;
---

<style>
  .optimized-image-container {
    position: relative;
    overflow: hidden;
    background: linear-gradient(45deg, rgba(178,34,34,.1), transparent);
  }
  
  .optimized-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  .placeholder {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
    background-size: 200% 100%;
    animation: shimmer 1.5s infinite;
  }
  
  @keyframes shimmer {
    0% { background-position: -200% 0; }
    100% { background-position: 200% 0; }
  }
  
  .image-wrapper {
    position: relative;
    width: 100%;
    height: 0;
  }
</style>

<div class={`optimized-image-container ${className}`}>
  <div class="image-wrapper" style={`padding-bottom: ${aspectRatio}%`}>
    <img
      src={imageUrl}
      alt={alt}
      width={width}
      height={height}
      loading={loadingAttr}
      fetchpriority={fetchPriority}
      class="optimized-image"
      decoding="async"
      onerror="handleImageError(this)"
    />

    <!-- Fallback for failed images -->
    <div class="placeholder" style="display: none;">
      <div class="flex items-center justify-center h-full text-ink-muted">
        <svg class="w-12 h-12" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
          <path fill-rule="evenodd" d="M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z" clip-rule="evenodd" />
        </svg>
        <div class="sr-only">Image failed to load</div>
      </div>
    </div>
  </div>
</div>

<script>
  // Image error handling function
  function handleImageError(img) {
    console.warn('Image failed to load:', img.src);
    img.style.display = 'none';
    const placeholder = img.parentElement?.querySelector('.placeholder');
    if (placeholder) {
      placeholder.style.display = 'block';
    }
  }

  // Make function globally available
  window.handleImageError = handleImageError;

  // Simple critical image preloading
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', preloadCriticalImages);
  } else {
    preloadCriticalImages();
  }

  function preloadCriticalImages() {
    const criticalImages = document.querySelectorAll('img[fetchpriority="high"]');
    criticalImages.forEach(img => {
      const link = document.createElement('link');
      link.rel = 'preload';
      link.as = 'image';
      link.href = img.src;
      document.head.appendChild(link);
    });
  }
</script>
