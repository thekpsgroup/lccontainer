---
const testimonials = [
  {
    name: "Chessica Rommell",
    role: "Verified Customer",
    location: "Dallas, TX",
    text: "LC Container, LLC is fantastic! Their service was fast and dependable from start to finish. Everyone I interacted with was friendly, helpful, and clearly very knowledgeable about the container industry. They offered the best price I could find—definitely competitive and fair.",
    photo: "/photos/container/standard/yard-overview.jpg"
  },
  {
    name: "Michelle Henrise",
    role: "Verified Customer",
    location: "Fort Worth, TX",
    text: "Call them today, you won't be sorry! Eric was incredible getting us all set up and scheduled and Fred was awesome on site! Both were so friendly and easy to work with. You should have seen Fred cutting those tight corners to get our containers in the perfect spot!",
    photo: "/photos/container/standard/yard-inventory.jpg"
  },
  {
    name: "Theresa Tumminia",
    role: "Nonprofit Director",
    location: "Austin, TX",
    text: "Eric at LC Container was exceptional in helping MATI-X our nonprofit design a custom-compliant container for food distribution. His expertise saved us from costly mistakes and significantly reduced our expenses. Thanks to his guidance and the perfect container, we now distribute 6,000 pounds of fresh food weekly to families in need.",
    photo: "/photos/container/standard/container-yard-overview.jpg"
  },
  {
    name: "Faith Nabors",
    role: "Local Guide",
    location: "Houston, TX",
    text: "Eric is wonderful to work with! He helped me find the perfect container that my fiancé and I turned into a floral cooler for my floral business. Eric is friendly and knowledgeable! Containers were at a great price and I'm so happy with how everything turned out.",
    photo: "/photos/container/standard/container-yard-inventory.jpg"
  },
  {
    name: "Tay Michelle",
    role: "Verified Customer",
    location: "San Antonio, TX",
    text: "We negotiated pricing and I left with a better deal I couldn't find anywhere else. Fast response, easy set up, and delivery was smooth! Customer service was top notch. They are now my go to when buying multiple containers!",
    photo: "/photos/container/standard/yard-storage.jpg"
  },
];
---
<section class="max-w-[1200px] mx-auto px-5 py-14 fade-in" id="testimonials">
  <h2 class="text-2xl md:text-3xl font-semibold text-center mb-12">What Our Customers Say</h2>
  
  <div class="relative">
    <!-- Testimonial Slider -->
    <div class="testimonial-slider overflow-hidden">
      <div class="flex transition-transform duration-500 ease-out" id="slider-track">
        {testimonials.map((t, index) => (
          <div class="w-full md:w-1/3 flex-shrink-0 px-3">
            <blockquote class="glass hover-lift h-full">
              <div class="flex items-center gap-3 mb-4">
                <div class="w-12 h-12 rounded-full bg-gradient-to-br from-brand-red to-brand-silver flex items-center justify-center text-white font-semibold text-sm">
                  {t.photo ? (
                    <img src={t.photo} alt={t.name} class="w-full h-full rounded-full object-cover" loading="lazy" />
                  ) : (
                    t.name.split(' ').map(n => n[0]).join('')
                  )}
                </div>
                <div>
                  <div class="font-semibold text-sm">{t.name}</div>
                  <div class="text-xs text-ink-muted">{t.role}, {t.location}</div>
                </div>
              </div>
              <div class="text-xs text-yellow-600 dark:text-yellow-400 font-semibold mb-3">
                ★★★★★ Excellent Service
              </div>
              <p class="text-sm text-ink-muted italic">"{t.text}"</p>
            </blockquote>
          </div>
        ))}
      </div>
    </div>
    
    <!-- Navigation Dots -->
    <div class="flex justify-center gap-2 mt-6">
      {testimonials.map((_, index) => (
        <button 
          class="w-2 h-2 rounded-full bg-brand-line hover:bg-brand-silver transition-colors duration-200"
          data-slide={index}
          aria-label={`Go to testimonial ${index + 1}`}
        ></button>
      ))}
    </div>
  </div>
</section>

<!-- Schema.org Reviews -->
<script type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "AggregateRating",
  "itemReviewed": {
    "@type": "LocalBusiness",
    "name": "LC Container"
  },
  "ratingValue": "5.0",
  "reviewCount": "50"
}
</script>

<script type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "Review",
  "itemReviewed": {
    "@type": "LocalBusiness",
    "name": "LC Container"
  },
  "review": [
    ${testimonials.map(t => `{
      "@type": "Review",
      "author": {
        "@type": "Person",
        "name": "${t.name}"
      },
      "reviewRating": {
        "@type": "Rating",
        "ratingValue": "5"
      },
      "reviewBody": "${t.text}",
      "datePublished": "2024-01-15"
    }`).join(',')}
  ]
}
</script>

<script define:vars={{ testimonials }}>
  // Testimonial slider functionality
  const sliderTrack = document.getElementById('slider-track');
  const dots = document.querySelectorAll('[data-slide]');
  let currentSlide = 0;
  let autoPlayInterval;

  function goToSlide(index) {
    if (!sliderTrack) return;
    
    currentSlide = index;
    const translateX = -index * 100;
    sliderTrack.style.transform = `translateX(${translateX}%)`;
    
    // Update dots
    dots.forEach((dot, i) => {
      dot.classList.toggle('bg-brand-silver', i === index);
      dot.classList.toggle('bg-brand-line', i !== index);
    });
  }

  function nextSlide() {
    const next = (currentSlide + 1) % testimonials.length;
    goToSlide(next);
  }

  function startAutoPlay() {
    autoPlayInterval = setInterval(nextSlide, 6000);
  }

  function stopAutoPlay() {
    clearInterval(autoPlayInterval);
  }

  // Event listeners
  dots.forEach((dot, index) => {
    dot.addEventListener('click', () => {
      goToSlide(index);
      stopAutoPlay();
      startAutoPlay();
    });
  });

  // Touch/swipe support for mobile
  let startX = 0;
  let endX = 0;

  sliderTrack?.addEventListener('touchstart', (e) => {
    startX = e.touches[0].clientX;
    stopAutoPlay();
  });

  sliderTrack?.addEventListener('touchend', (e) => {
    endX = e.changedTouches[0].clientX;
    const diff = startX - endX;
    
    if (Math.abs(diff) > 50) {
      if (diff > 0) {
        nextSlide();
      } else {
        const prev = (currentSlide - 1 + testimonials.length) % testimonials.length;
        goToSlide(prev);
      }
    }
    
    startAutoPlay();
  });

  // Start autoplay
  startAutoPlay();

  // Pause on hover
  sliderTrack?.addEventListener('mouseenter', stopAutoPlay);
  sliderTrack?.addEventListener('mouseleave', startAutoPlay);
</script>
