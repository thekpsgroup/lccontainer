---
import OptimizedImage from './OptimizedImage.astro';

export interface Props {
  images: Array<{
    src: string;
    alt: string;
    title?: string;
    category?: string;
    description?: string;
  }>;
  columns?: 2 | 3 | 4;
  showTitles?: boolean;
  showOverlay?: boolean;
  aspectRatio?: 'square' | 'landscape' | 'portrait';
  class?: string;
  onViewDetails?: (image: any, index: number) => void;
}

const {
  images,
  columns = 3,
  showTitles = false,
  showOverlay = true,
  aspectRatio = 'landscape',
  class: className = '',
  onViewDetails
} = Astro.props;

const gridCols = {
  2: 'grid-cols-1 md:grid-cols-2',
  3: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3',
  4: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-4'
};

const aspectClasses = {
  square: 'aspect-square',
  landscape: 'aspect-[4/3]',
  portrait: 'aspect-[3/4]',
  wide: 'aspect-[16/5]'
};
---



<div class={`modern-gallery-bg grid gap-12 ${gridCols[columns as 2 | 3 | 4]} ${className}`}>
  {images.map((image: {
    src: string;
    alt: string;
    title?: string;
    category?: string;
    description?: string;
  }, index: number) => {
    // Determine aspect ratio based on image title or alt text
    let ratio: keyof typeof aspectClasses = aspectRatio as keyof typeof aspectClasses;
    const title = (image.title || image.alt || '').toLowerCase();
    if (title.includes("40' ") || title.includes('40ft') || title.includes('40-foot') || title.includes('40 foot')) {
      ratio = 'wide';
    } else if (title.includes("20' ") || title.includes('20ft') || title.includes('20-foot') || title.includes('20 foot')) {
      ratio = 'landscape';
    } else if (title.includes("10' ") || title.includes('10ft') || title.includes('10-foot') || title.includes('10 foot')) {
      ratio = 'square';
    }
    const btnId = `view-details-btn-${index}`;
    return (
      <div
        class="group relative overflow-hidden rounded-4xl shadow-xl hover:shadow-blue-400/40 transition-all duration-500 transform hover:scale-105 bg-white/80 dark:bg-slate-800/80 border border-slate-200 dark:border-slate-700 backdrop-blur-xl"
        style={`animation-delay: ${index * 0.1}s`}
      >
        {/* Modern Image Container */}
        <div class={`relative ${aspectClasses[ratio]} overflow-hidden`}>
          <OptimizedImage
            src={image.src}
            alt={image.alt}
            width={900}
            height={600}
            class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-700 ease-out"
            loading="lazy"
          />
          {/* Modern Overlay */}
          {showOverlay && (
            <div class="absolute inset-0 bg-gradient-to-t from-black/70 via-black/30 to-transparent opacity-0 group-hover:opacity-100 transition-all duration-500 backdrop-blur-sm">
              <div class="absolute inset-0 bg-gradient-to-t from-blue-500/30 via-transparent to-transparent"></div>
              {/* View Details Button */}
              <button
                id={btnId}
                class="absolute bottom-6 right-6 px-5 py-2 bg-blue-600 text-white font-semibold rounded-full shadow-lg opacity-0 group-hover:opacity-100 transition-all duration-300 text-base tracking-wide hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-400"
                type="button"
              >
                View Details
              </button>
              <script type="text/javascript" is:inline>
                {`
                  document.getElementById('${btnId}')?.addEventListener('click', function(event) {
                    event.stopPropagation();
                    const onViewDetails = window.__onViewDetails;
                    if (typeof onViewDetails === 'function') {
                      onViewDetails(${JSON.stringify(image)}, ${index});
                    } else if (typeof window.openLightbox === 'function') {
                      window.openLightbox(${index});
                    } else {
                      window.open(${JSON.stringify(image.src)}, '_blank');
                    }
                  });
                `}
              </script>
            </div>
          )}
          {/* Floating Badge */}
          {image.category && (
            <div class="absolute top-5 left-5 px-4 py-1 bg-white/90 dark:bg-slate-800/90 backdrop-blur-md rounded-full text-xs font-bold text-blue-700 dark:text-blue-200 border border-blue-200 dark:border-blue-700/40 shadow-md">
              {image.category}
            </div>
          )}
          {/* Zoom Icon */}
          <div class="absolute top-5 right-5 w-11 h-11 bg-white/90 dark:bg-slate-800/90 backdrop-blur-md rounded-full flex items-center justify-center opacity-0 group-hover:opacity-100 transform scale-90 group-hover:scale-110 transition-all duration-300 shadow-md">
            <svg class="w-6 h-6 text-blue-700 dark:text-blue-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0zM10 7v3m0 0v3m0-3h3m-3 0H7" />
            </svg>
          </div>
        </div>
        {/* Modern Content Overlay */}
        {showTitles && (image.title || image.description) && (
          <div class="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-blue-900/90 via-blue-800/60 to-transparent p-8 transform translate-y-6 group-hover:translate-y-0 transition-transform duration-500 rounded-b-4xl">
            {image.title && (
              <h3 class="text-white font-extrabold text-2xl mb-2 leading-tight tracking-tight drop-shadow-lg">
                {image.title}
              </h3>
            )}
            {image.description && (
              <p class="text-blue-200 text-lg leading-relaxed opacity-0 group-hover:opacity-100 transition-opacity duration-500 delay-100 drop-shadow">
                {image.description}
              </p>
            )}
          </div>
        )}
        {/* Modern Hover Border Effect */}
        <div class="absolute inset-0 rounded-4xl border-2 border-transparent group-hover:border-blue-400/40 transition-all duration-300 pointer-events-none"></div>
      </div>
    );
  })}
</div>

<style>
  .modern-gallery-bg {
    background: linear-gradient(135deg, #e0e7ff 0%, #f0f4ff 100%);
    padding: 3rem 0 3rem 0;
    border-radius: 2.5rem;
    box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.12);
  }
  .group:hover img {
    transform: scale(1.1);
  }
  .group {
    animation: fadeInUp 0.7s cubic-bezier(.23,1.01,.32,1) forwards;
    opacity: 0;
    transform: translateY(30px);
  }
  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  .group:nth-child(1) { animation-delay: 0.1s; }
  .group:nth-child(2) { animation-delay: 0.2s; }
  .group:nth-child(3) { animation-delay: 0.3s; }
  .group:nth-child(4) { animation-delay: 0.4s; }
  .group:nth-child(5) { animation-delay: 0.5s; }
  .group:nth-child(6) { animation-delay: 0.6s; }
  .rounded-4xl {
    border-radius: 2.5rem;
  }
</style>
