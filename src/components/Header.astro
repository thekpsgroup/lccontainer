---
import SmartImage from "./SmartImage.astro";
import CTAButton from "./CTAButton.astro";
import OpenStatus from "./OpenStatus.astro";
import Nav from "./Nav.astro";
import MobileMenu from "./MobileMenu.astro";
---

<header
  class="sticky top-0 z-50 border-b border-brand-line/40 bg-white/60 dark:bg-brand-black/80 backdrop-blur-xl shadow-lg transition-all duration-300"
  id="header"
>
  <div
    class="max-w-[1200px] mx-auto px-5 flex h-20 items-center justify-between"
  >
    <a href="/" class="flex items-center gap-3">
      <img
        src="/photos/lccontainer-dark.png"
        alt="LC Container"
        class="h-9 w-auto"
      />
      <span class="sr-only">LC Container</span>
    </a>

    <Nav currentPath={Astro.url.pathname} />

    <div class="hidden md:flex items-center gap-5">
      <OpenStatus class="hidden lg:inline-flex" />
      <CTAButton
        size="md"
        phoneNumber="12145244168"
        data-cta="header_phone"
        aria-label="Call us now for a quote"
        class="animate-pulse-subtle"
      />
    </div>

    <MobileMenu currentPath={Astro.url.pathname} />
  </div>
</header>

<script>
  // Header scroll blur effect
  const header = document.getElementById("header");
  let ticking = false;

  const updateHeader = () => {
    const currentScrollY = window.scrollY;

    if (currentScrollY > 30) {
      header?.classList.add("bg-brand-black/95", "backdrop-blur-md");
    } else {
      header?.classList.remove("bg-brand-black/95", "backdrop-blur-md");
    }

    ticking = false;
  };

  window.addEventListener(
    "scroll",
    () => {
      if (!ticking) {
        requestAnimationFrame(updateHeader);
        ticking = true;
      }
    },
    { passive: true }
  );

  // Mobile menu functionality
  const mobileMenuButton = document.getElementById("mobile-menu-button");
  const mobileMenu = document.getElementById("mobile-menu");

  if (mobileMenuButton && mobileMenu) {
    let isOpen = false;

    const toggleMenu = () => {
      isOpen = !isOpen;
      mobileMenu.classList.toggle("hidden", !isOpen);
      mobileMenuButton.setAttribute("aria-expanded", isOpen.toString());

      // Close menu when clicking outside
      if (isOpen) {
        const closeMenu = (e: MouseEvent) => {
          if (
            !mobileMenu.contains(e.target as Node) &&
            !mobileMenuButton.contains(e.target as Node)
          ) {
            mobileMenu.classList.add("hidden");
            mobileMenuButton.setAttribute("aria-expanded", "false");
            isOpen = false;
            document.removeEventListener("click", closeMenu);
            document.removeEventListener("keydown", handleEscape);
          }
        };

        const handleEscape = (e: KeyboardEvent) => {
          if (e.key === "Escape") {
            mobileMenu.classList.add("hidden");
            mobileMenuButton.setAttribute("aria-expanded", "false");
            isOpen = false;
            document.removeEventListener("click", closeMenu);
            document.removeEventListener("keydown", handleEscape);
          }
        };

        setTimeout(() => {
          document.addEventListener("click", closeMenu);
          document.addEventListener("keydown", handleEscape);
        }, 10);
      }
    };

    mobileMenuButton.addEventListener("click", toggleMenu);
  }
</script>
