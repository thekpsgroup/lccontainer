---
export interface BreadcrumbItem {
  name: string;
  url: string;
}

export interface Props {
  items: BreadcrumbItem[];
}

const { items } = Astro.props;

const schema = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  itemListElement: items.map((item, index) => ({
    "@type": "ListItem",
    position: index + 1,
    name: item.name,
    item: `https://lccontainer.com${item.url}`,
  })),
};
---

<script type="application/ld+json" set:html={JSON.stringify(schema)} />

<nav aria-label="Breadcrumb" class="text-sm text-gray-600 mb-6 px-4">
  <ol class="flex flex-wrap items-center space-x-2">
    {
      items.map((item, index) => (
        <li class="flex items-center">
          {index > 0 && (
            <svg
              class="w-4 h-4 mx-2 text-gray-400"
              fill="currentColor"
              viewBox="0 0 20 20"
            >
              <path
                fill-rule="evenodd"
                d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                clip-rule="evenodd"
              />
            </svg>
          )}
          {index === items.length - 1 ? (
            <span class="font-semibold text-gray-900">{item.name}</span>
          ) : (
            <a
              href={item.url}
              class="hover:text-blue-600 hover:underline transition-colors"
            >
              {item.name}
            </a>
          )}
        </li>
      ))
    }
  </ol>
</nav>
